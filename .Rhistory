mc
mc <- WDI(indicator = 'CM.MKT.LCAP.CD',
country = c('CN', 'US', 'GB', 'JP', 'IN'),
start = 2010, end = 2010)
mc
mc <- WDI(indicator = 'CM.MKT.LCAP.CD',
country = c('CN', 'US', 'JP', 'IN'),
start = 2014, end = 2014)
mc
WDI(indicator = 'NY.GDP.MKTP.KD',
country = 'EU',
start = 2014, end = 2014)
countries <- c('CN', 'US', 'EU', 'JP', 'IN')
stock.cap <- WDI(indicator = 'CM.MKT.LCAP.CD',
country = countries,
start = 2014, end = 2014)
stock.cap
stock.cap[CN,CM.MKT.LCAP.CD]
stock.cap["country","CM.MKT.LCAP.CD"]
stock.cap["China","CM.MKT.LCAP.CD"]
countries.long <- stock.cap$country
countries.long
c("Cryptos", countries.long)
c(crypto.market.cap,stock.cap$CM.MKT.LCAP.CD)
crypto.market.cap <- global.crypto$total_market_cap_usd
global.crypto <- content(GET("https://api.coinmarketcap.com/v1/global/"))
crypto.market.cap <- global.crypto$total_market_cap_usd
crypto.trading.vol <- global.crypto$total_24h_volume_usd
c(crypto.market.cap,stock.cap$CM.MKT.LCAP.CD)
mc
mc <- WDI(indicator = 'NY.GDP.MKTP.KD',
country = countries,
start = 2014, end = 2014)
mc
defalator <- WDI(indicator = 'NY.GDP.MKTP.CD.XD',
country = countries,
start = 2014, end = 2014)
defalator <- WDI(indicator = 'NY.GDP.MKTP.CD.XD',
country = countries,
start = 2014, end = 2014)
defalator <- WDI(indicator = 'NY.GDP.MKTP.CD.XD',
country = countries,
start = 2013, end = 2013)
mc <- WDI(indicator = 'NY.GDP.MKTP.KD',
country = countries,
start = 2014, end = 2014)
wc
mc
c(crypto.market.cap, mc$NY.GDP.MKTP.KD)
countries
stock.cap
countries.long
market.stats <- data.frame(market=c("Cryptos", countries.long),
stock.value.usd=c(crypto.market.cap,stock.cap$CM.MKT.LCAP.CD),
gdp=c(crypto.market.cap, mc$NY.GDP.MKTP.KD))
market.stats
?cast
library(plyr)
?cast
dcast(market.stats)
library(reshape2)
dcast(market.stats)
ggplot(data=market.stats, aes(x=market, y=gdp, fill=market)) +
geom_bar(colour="black", stat="identity") +
guides(fill=FALSE)
ggplot(data=market.stats, aes(x=market, y=stock.value.usd, fill=market)) +
geom_bar(colour="black", stat="identity") +
guides(fill=FALSE)
crypto.market.cap
countries <- "all" # c('CN', 'US', 'EU', 'JP', 'IN')
stock.cap <- WDI(indicator = 'CM.MKT.LCAP.CD',
country = countries,
start = 2014, end = 2014)
countries.long <- stock.cap$country
mc <- WDI(indicator = 'NY.GDP.MKTP.KD',
country = countries,
start = 2014, end = 2014)
market.stats <- data.frame(market=c("Cryptos", countries.long),
stock.value.usd=c(crypto.market.cap,stock.cap$CM.MKT.LCAP.CD),
gdp=c(crypto.market.cap, mc$NY.GDP.MKTP.KD))
asset.stats <- data.frame(asset=c("Cryptos","S&P500","DOW","GBP","R2000"),
market.cap.bils=c(crypto.market.cap,1,1,1,1)/(10^9),
trading.vol.mils=c(crypto.trading.vol,1,1,1,1)/(10^6))
ggplot(data=market.stats, aes(x=market, y=gdp, fill=market)) +
geom_bar(colour="black", stat="identity") +
guides(fill=FALSE)
crypto.trading.vol
SPY <- Quandl("SPY", start_date="2016-01-01", end_date="2016-06-19", type="xts")
SPY <- Quandl("YAHOO/INDEX_SPY", api_key="-GNvgv_nqBHeqiyEQjyj", start_date="2016-01-01", end_date="2016-06-19", type="xts")
head(SPY)
crypto.trading.vol
R2000 <- 1
R2000
ggplot(data=market.stats, aes(x=market, y=gdp, fill=market)) +
geom_bar(colour="black", stat="identity") +
guides(fill=FALSE) + scale_y_log10(name="Log(USD)")
countries <- c('CN', 'US', 'EU', 'JP', 'IN')
stock.cap <- WDI(indicator = 'CM.MKT.LCAP.CD',
country = countries,
start = 2014, end = 2014)
countries.long <- stock.cap$country
mc <- WDI(indicator = 'NY.GDP.MKTP.KD',
country = countries,
start = 2014, end = 2014)
market.stats <- data.frame(market=c("Cryptos", countries.long),
stock.value.usd=c(crypto.market.cap,stock.cap$CM.MKT.LCAP.CD),
gdp=c(crypto.market.cap, mc$NY.GDP.MKTP.KD))
ggplot(data=market.stats, aes(x=market, y=gdp, fill=market)) +
geom_bar(colour="black", stat="identity") +
guides(fill=FALSE) + scale_y_log10(name="Log(USD)")
ggplot(data=market.stats, aes(x=market, y=stock.value.usd, fill=market)) +
geom_bar(colour="black", stat="identity") +
guides(fill=FALSE)  + scale_y_log10(name="Log(USD)")
price.history <- list(
SPY = getQuandlData("YAHOO/INDEX_SPY")
)
getQuandlData <- function(symbol){
start.date="2016-01-01"
end.date="2016-06-01"
Quandl(symbol, api_key="-GNvgv_nqBHeqiyEQjyj", start_date=start.date, end_date=end.date, type="xts")
}
price.history <- list(
SPY = getQuandlData("YAHOO/INDEX_SPY")
)
price.history
head(price.history)
head(price.history$SPY)
price.history <- list(
SPY = getQuandlData("YAHOO/INDEX_SPY"),
DOW = getQuandlData("YAHOO/INDEX_DJI"),
R2000 = getQuandlData("YAHOO/INDEX_RUT"),
USDGBP = getQuandlData("BUNDESBANK/BBEX3_D_USD_GBP_CA_AC_000"), #USD/GBP
USDEUR = getQuandlData("BOE/XUDLERD"), #USD/EUR
JPYUSD = getQuandlData("BUNDESBANK/BBEX3_D_JPY_USD_CA_AC_000"),
USDBTC = getQuandlData("BCHARTS/COINBASEUSD")
)
SPY = getQuandlData("YAHOO/INDEX_SPY")["Close"]
head(price.history$DOW)
head(price.history$DOW["Close",])
head(price.history$DOW[,"Close"])
getQuandlData <- function(symbol){
start.date="2016-01-01"
end.date="2016-06-01"
Quandl(symbol, api_key="-GNvgv_nqBHeqiyEQjyj", start_date=start.date, end_date=end.date, type="xts")[,"Close"]
}
price.history <- list(
SPY = getQuandlData("YAHOO/INDEX_SPY"),
DOW = getQuandlData("YAHOO/INDEX_DJI"),
R2000 = getQuandlData("YAHOO/INDEX_RUT"),
USDGBP = getQuandlData("BUNDESBANK/BBEX3_D_USD_GBP_CA_AC_000"), #USD/GBP
USDEUR = getQuandlData("BOE/XUDLERD"), #USD/EUR
JPYUSD = getQuandlData("BUNDESBANK/BBEX3_D_JPY_USD_CA_AC_000"),
USDBTC = getQuandlData("BCHARTS/COINBASEUSD")
)
head(rbind(price.history))
head(cbind(price.history))
head(merge(price.history))
head(merge(price.history, all=TRUE))
head(merge.xts(price.history, all=TRUE))
head(do.call(merge, price.history))
price.history
head(price.history$USDGBP
)
getQuandlData <- function(symbol){
start.date="2016-01-01"
end.date="2016-06-01"
Quandl(symbol, api_key="-GNvgv_nqBHeqiyEQjyj", start_date=start.date, end_date=end.date, type="xts")
}
is.null(price.history)
sapply(price.history, is.null)
?is.null
is.null(price.history$USDGBP)
price.history$USDGBP
price.history <- list(
SPY = getQuandlData("YAHOO/INDEX_SPY")[,"Close"],
DOW = getQuandlData("YAHOO/INDEX_DJI")[,"Close"],
R2000 = getQuandlData("YAHOO/INDEX_RUT")[,"Close"],
USDGBP = getQuandlData("BUNDESBANK/BBEX3_D_USD_GBP_CA_AC_000"), #USD/GBP
USDEUR = getQuandlData("BOE/XUDLERD"), #USD/EUR
JPYUSD = getQuandlData("BUNDESBANK/BBEX3_D_JPY_USD_CA_AC_000"),
USDBTC = getQuandlData("BCHARTS/COINBASEUSD")
)
head(price.history$SPY)
sapply(price.history, head)
head(getQuandlData("YAHOO/INDEX_SPY"))
price.history <- list(
SPY = getQuandlData("YAHOO/INDEX_SPY")[,"Adjusted Close"],
DOW = getQuandlData("YAHOO/INDEX_DJI")[,"Adjusted Close"],
R2000 = getQuandlData("YAHOO/INDEX_RUT")[,"Adjusted Close"],
USDGBP = getQuandlData("BUNDESBANK/BBEX3_D_USD_GBP_CA_AC_000"), #USD/GBP
USDEUR = getQuandlData("BOE/XUDLERD"), #USD/EUR
JPYUSD = getQuandlData("BUNDESBANK/BBEX3_D_JPY_USD_CA_AC_000"),
USDBTC = getQuandlData("BCHARTS/COINBASEUSD")["Weighted Price",]
)
price.history <- list(
SPY = getQuandlData("YAHOO/INDEX_SPY")[,"Adjusted Close"],
DOW = getQuandlData("YAHOO/INDEX_DJI")[,"Adjusted Close"],
R2000 = getQuandlData("YAHOO/INDEX_RUT")[,"Adjusted Close"],
USDGBP = getQuandlData("BUNDESBANK/BBEX3_D_USD_GBP_CA_AC_000"), #USD/GBP
USDEUR = getQuandlData("BOE/XUDLERD"), #USD/EUR
JPYUSD = getQuandlData("BUNDESBANK/BBEX3_D_JPY_USD_CA_AC_000"),
USDBTC = getQuandlData("BCHARTS/COINBASEUSD")["Weighted Price",]
)
price.history <- list(
SPY = getQuandlData("YAHOO/INDEX_SPY")[,"Adjusted Close"],
DOW = getQuandlData("YAHOO/INDEX_DJI")[,"Adjusted Close"],
R2000 = getQuandlData("YAHOO/INDEX_RUT")[,"Adjusted Close"],
USDGBP = getQuandlData("BUNDESBANK/BBEX3_D_USD_GBP_CA_AC_000"), #USD/GBP
USDEUR = getQuandlData("BOE/XUDLERD"), #USD/EUR
JPYUSD = getQuandlData("BUNDESBANK/BBEX3_D_JPY_USD_CA_AC_000"),
USDBTC = getQuandlData("BCHARTS/COINBASEUSD")["Weighted Price",]
)
warnings()
SPY = getQuandlData("YAHOO/INDEX_SPY")[,"Adjusted Close"]
head(SPY)
price.history <- list(
SPY = getQuandlData("YAHOO/INDEX_SPY")[,"Adjusted Close"],
DOW = getQuandlData("YAHOO/INDEX_DJI")[,"Adjusted Close"],
R2000 = getQuandlData("YAHOO/INDEX_RUT")[,"Adjusted Close"],
USDGBP = getQuandlData("BUNDESBANK/BBEX3_D_USD_GBP_CA_AC_000"), #USD/GBP
USDEUR = getQuandlData("BOE/XUDLERD"), #USD/EUR
JPYUSD = getQuandlData("BUNDESBANK/BBEX3_D_JPY_USD_CA_AC_000"),
USDBTC = getQuandlData("BCHARTS/COINBASEUSD")[,"Weighted Price",]
)
combined.price.history <- do.call(merge, price.history)
head(combined.price.history)
?do.call
?merge.xts
CalculateReturns(combined.price.history)
?CalculateReturns
Return.cumultive(CalculateReturns(combined.price.history))
Return.cumulative(CalculateReturns(combined.price.history))
charts.PerformanceSummary(CalculateReturns(combined.price.history))
chart.CumReturns(CalculateReturns(combined.price.history))
na.aggregate
?na.aggregate
?na.fill
na.fill(CalculateReturns(combined.price.history)), 0)
na.fill(CalculateReturns(combined.price.history), fill=0)
combined.price.history <- na.fill(CalculateReturns(do.call(merge, price.history)), fill=0)
chart.CumReturns(combined.price.history)
?chart.CumReturns
chart.CumReturns(combined.price.history, legend.loc="top")
which(combined.price.history$USDGBP < -.2)
combined.price.history[82,]
price.history <- do.call(merge, price.history)
combined.price.history <- na.fill(CalculateReturns(price.history), fill=0)
price.history[82,]
price.history[81:83,]
price.history[81:85,]
price.history[81:88,]
price.history[81:90,]
CalculateReturns(price.history[81:90,])
CalculateReturns(price.history[75:90,])
price.history[75:90,]
list.names <- names(price.history)
price.history <- list(
SPY = getQuandlData("YAHOO/INDEX_SPY")[,"Adjusted Close"],
DOW = getQuandlData("YAHOO/INDEX_DJI")[,"Adjusted Close"],
R2000 = getQuandlData("YAHOO/INDEX_RUT")[,"Adjusted Close"],
USDGBP = getQuandlData("BUNDESBANK/BBEX3_D_USD_GBP_CA_AC_000"), #USD/GBP
USDEUR = getQuandlData("BOE/XUDLERD"), #USD/EUR
JPYUSD = getQuandlData("BUNDESBANK/BBEX3_D_JPY_USD_CA_AC_000"),
USDBTC = getQuandlData("BCHARTS/COINBASEUSD")[,"Weighted Price",]
)
list.names <- names(price.history)
price.history <- do.call(merge, price.history)
names(price.history) <- list.names
head(price.history)
price.history["2016-03-22",USDGBP]
price.history["2016-03-22","USDGBP"]
price.history["2016-03-22","USDGBP"] <- NA
combined.price.history <- na.fill(CalculateReturns(price.history), fill=0)
chart.CumReturns(combined.price.history)
chart.CumReturns(combined.price.history, legend.loc = "topleft")
greenfocus = c("#41AB5D", "#252525", "#525252", "#737373", "#969696", "#BDBDBD", "#D9D9D9", "#F0F0F0")
chart.CumReturns(combined.price.history, legend.loc = "topleft", colorset = greenfocus)
list.names
rev(list.names)
head(rev(combined.price.history))
head(combined.price.history[rev(list.names)])
head(combined.price.history[rev(list.names),])
head(combined.price.history[,rev(list.names)])
chart.CumReturns(combined.price.history[,rev(list.names)], legend.loc = "topleft", colorset = greenfocus)
chart.CumReturns(combined.price.history[,rev(list.names)], legend.loc = "topleft", colorset = greenfocus,
main="Cumulative Returns of BTC/USD vs. other assets for 2016")
plot.xts(price.history)
?plot.xts
300/5
24*60
24*60*60
24*60/5
288*300
start.date="2016-01-01"
end.date="2016-06-29"
start.seconds=as.numeric(seconds(as.POSICct(start.date, origin = "1970-01-01")))
library(lubridate)
start.seconds=as.numeric(seconds(as.POSICct(start.date, origin = "1970-01-01")))
start.seconds=as.numeric(seconds(as.POSIXct(start.date, origin = "1970-01-01")))
end.seconds=as.numeric(seconds(as.POSIXct(end.date, origin = "1970-01-01"))))
end.seconds=as.numeric(seconds(as.POSIXct(end.date, origin = "1970-01-01")))
start.seconds
end.seconds
pair <- "BTC_XMR"
start.seconds=as.numeric(seconds(as.POSIXct("2016-01-01", origin = "1970-01-01")))
end.seconds=as.numeric(seconds(as.POSIXct("2016-06-29", origin = "1970-01-01")))
head(as.xts(content(GET(paste0("https://poloniex.com/public?command=returnChartData&currencyPair="
,pair,"&start=",start.seconds,"&end=",stop.seconds,"&period=86400")))))
head(as.xts(content(GET(paste0("https://poloniex.com/public?command=returnChartData&currencyPair="
,pair,"&start=",start.seconds,"&end=",end.seconds,"&period=86400")))))
new.data <- content(GET(paste0("https://poloniex.com/public?command=returnChartData&currencyPair="
,pair,"&start=",start.seconds,"&end=",end.seconds,"&period=86400")))
new.data <- ldply(new.data, data.frame)
new.data$date <- as.character(as.POSIXct(new.data$date, origin = "1970-01-01"))
head(new.data)
head(as.Date(new.data$date))
//poloniex.com/public?command=returnChartData&currencyPair="
,pair,"&start=",start.seconds,"&end=",end.seconds,"&period=86400")))
new.data <- ldply(new.data, data.frame)
new.data$date <- as.Date(as.character(
as.POSIXct(new.data$date, origin = "1970-01-01")))
new.data <- content(GET(paste0("https://poloniex.com/public?command=returnChartData&currencyPair="
,pair,"&start=",start.seconds,"&end=",end.seconds,"&period=86400")))
new.data <- ldply(new.data, data.frame)
new.data$date <- as.Date(as.character(as.POSIXct(new.data$date, origin = "1970-01-01")))
head(xts(new.data, order.by="date"))
head(xts(new.data, order.by=date))
head(new.data)
?as.POSIXct
new.data <- content(GET(paste0("https://poloniex.com/public?command=returnChartData&currencyPair="
,pair,"&start=",start.seconds,"&end=",end.seconds,"&period=86400")))
new.data <- ldply(new.data, data.frame)
head(as.POSIXct(new.data$date, origin = "1970-01-01", format="%Y-%M-%d"))
head(strptime(as.POSIXct(new.data$date, origin = "1970-01-01"), format="%Y-%M-%d"))
head(strptime(as.POSIXct(new.data$date, origin = "1970-01-01"), format="%F"))
head(as.POSIXct(new.data$date, origin = "1970-01-01", format="%F"))
head(as.POSIXct(as.Date(new.data$date, format="%F"), origin = "1970-01-01"))
head(as.POSIXlt(as.Date(new.data$date, format="%F"), origin = "1970-01-01"))
?as.Date
head(as.POSIXct(as.Date(new.data$date)))
head(as.Date(new.data$date))
head(new.data$date)
new.data <- content(GET(paste0("https://poloniex.com/public?command=returnChartData&currencyPair="
,pair,"&start=",start.seconds,"&end=",end.seconds,"&period=86400")))
new.data <- ldply(new.data, data.frame)
head(new.data$date)
?as.POSIXct
head(as.POSIXlt(new.data$date, origin = "1970-01-01"))
head(as.Date(as.POSIXlt(new.data$date, origin = "1970-01-01")))
?xts
head(as.Date(as.POSIXct(new.data$date, origin = "1970-01-01")))
new.data$date <- as.Date(as.POSIXct(new.data$date, origin = "1970-01-01"))
head(xts(new.data, order.by=new.data$date))
xts.data <- xts(new.data, order.by=new.data$date)
xts.data$date <- NULL
head(xts.data)
xts.data <- xts(new.data[,"close"], order.by=new.data$date)
head(xts.data)
getPoloniexData <- function(pair){
start.seconds=as.numeric(seconds(as.POSIXct("2016-01-01", origin = "1970-01-01")))
end.seconds=as.numeric(seconds(as.POSIXct("2016-06-29", origin = "1970-01-01")))
new.data <- content(GET(paste0("https://poloniex.com/public?command=returnChartData&currencyPair="
,pair,"&start=",start.seconds,"&end=",end.seconds,"&period=86400")))
new.data <- ldply(new.data, data.frame)
new.data$date <- as.Date(as.POSIXct(new.data$date, origin = "1970-01-01"))
xts.data <- xts(new.data[,"close"], order.by=new.data$date)
return(xts.data)
}
testy <- getPoloniexData(pai)
testy <- getPoloniexData(pair)
start.seconds=as.numeric(seconds(as.POSIXct("2016-01-01", origin = "1970-01-01")))
end.seconds=as.numeric(seconds(as.POSIXct("2016-06-29", origin = "1970-01-01")))
new.data <- content(GET(paste0("https://poloniex.com/public?command=returnChartData&currencyPair="
,pair,"&start=",start.seconds,"&end=",end.seconds,"&period=86400")))
new.data <- ldply(new.data, data.frame)
new.data$date <- as.Date(as.POSIXct(new.data$date, origin = "1970-01-01"))
xts.data <- xts(new.data[,"close"], order.by=new.data$date)
head(xts.data)
names(xts.data) <- pair
head(xts.data)
sub("BTC_","",pair)
names(xts.data) <- sub("BTC_","",pair)
head(xts.data)
poloniex.data <- do.call(merge, lapply(pairs, getPoloniexData))
pairs <- list("BTC_BTS", "BTC_CLAM", "BTC_DASH", "BTC_DOGE", "BTC_ETH", "BTC_FCT"
, "BTC_LTC", "BTC_MAID", "BTC_STR", "BTC_XMR", "BTC_XRP")
poloniex.data <- do.call(merge, lapply(pairs, getPoloniexData))
set_config(timeout(seconds = 30))
poloniex.data <- do.call(merge, lapply(pairs, getPoloniexData))
head(poloniex.data)
p.data <- lapply(pairs, getPoloniexData)
str(p.data)
head(merge(p.data[1], p.data[2]))
str(p.data[[1]])
head(merge(p.data[[1]], p.data[[2]]))
s.data <- lapply(pairs, getPoloniexData)
str(s.data)
pairs <- c("BTC_BTS", "BTC_CLAM", "BTC_DASH", "BTC_DOGE", "BTC_ETH", "BTC_FCT"
, "BTC_LTC", "BTC_MAID", "BTC_STR", "BTC_XMR", "BTC_XRP")
p.data <- lapply(pairs[1:2], getPoloniexData)
str(p.data)
head(p.data[[1]])
getPoloniexData
getPoloniexData <- function(pair){
start.seconds=as.numeric(seconds(as.POSIXct("2016-01-01", origin = "1970-01-01")))
end.seconds=as.numeric(seconds(as.POSIXct("2016-06-29", origin = "1970-01-01")))
new.data <- content(GET(paste0("https://poloniex.com/public?command=returnChartData&currencyPair="
,pair,"&start=",start.seconds,"&end=",end.seconds,"&period=86400")))
new.data <- ldply(new.data, data.frame)
new.data$date <- as.Date(as.POSIXct(new.data$date, origin = "1970-01-01"))
xts.data <- xts(new.data[,"close"], order.by=new.data$date)
names(xts.data) <- sub("BTC_","",pair)
return(xts.data)
}
p.data <- lapply(pairs[1:2], getPoloniexData)
head(p.data[[1]])
head(do.call(merge, p.data))
poloniex.data <- do.call(merge, lapply(pairs, getPoloniexData))
head(poloniex.data)
polo.returns <- Return.calculate(poloniex.data)
head(polo.returns)
polo.returns <- na.omit(Return.calculate(poloniex.data))
chart.CumReturns(combined.price.history[,rev(list.names)], legend.loc = "topleft", colorset = greenfocus,
chart.CumReturns(polo.returns, legend.loc = "topleft", # colorset = ,
main="Cumulative Returns of Margin Traded Assets on Poloniex")
cor(polo.returns)
round(cor(polo.returns),2)
chart.Correlation(polo.returns)
head(warnings())
?chart.Correlation
charts.PerformanceSummary(polo.returns)
chart.CumReturns(polo.returns, legend.loc = "topleft", colorset = tol11qualitative,
main="Cumulative Returns of Margin Traded Assets on Poloniex")
chart.Correlation(polo.returns, colorset=tol11qualitative)
table(cor(polo.returns))
library(corrplot)
install.packages("corrplot")
library(corrplot)
corrplot(cor(polo.returns), type="upper", order="hclust", tl.col="black", tl.srt=45)
?corrplot
?cor
cor(polo.returns)
matrix(cor(polo.returns))
cor(polo.returns)
corrplot(cor(polo.returns), type="upper", order="hclust", tl.col="black", tl.srt=45)
corrplot(cor(polo.returns), type="upper", order="hclust", tl.col="black")
corrplot(cor(polo.returns), type="upper", order="hclust", tl.col="black", tl.srt=45)
chart.Correlation(polo.returns)
head(combined.price.history$USDBTC)
head(merge(polo.returns, combined.price.history$USDBTC))
tail(merge(polo.returns, combined.price.history$USDBTC))
tail(na.omit(merge(polo.returns, combined.price.history$USDBTC)))
cor(na.omit(merge(polo.returns, combined.price.history$USDBTC)))
corrplot(cor(na.omit(merge(polo.returns, combined.price.history$USDBTC))), type="upper", order="hclust", tl.col="black", tl.srt=45)
corrplot(cor(na.omit(merge(polo.returns, combined.price.history$USDBTC))), type="upper", order="hclust", tl.col="black", tl.srt=45)
library(httr)
library(xts)
library(lubridate)
library(PerformanceAnalytics)
library(quantmod)
library(Quandl)
library(WDI)
library(reshape2)
library(ggplot2)
library(dplyr)
#helper functions
getQuandlData <- function(symbol){
start.date="2016-01-01"
end.date="2016-06-29"
Quandl(symbol, api_key="-GNvgv_nqBHeqiyEQjyj", start_date=start.date, end_date=end.date, type="xts")
}
getPoloniexData <- function(pair){
start.seconds=as.numeric(seconds(as.POSIXct("2016-01-01", origin = "1970-01-01")))
end.seconds=as.numeric(seconds(as.POSIXct("2016-06-29", origin = "1970-01-01")))
new.data <- content(GET(paste0("https://poloniex.com/public?command=returnChartData&currencyPair="
,pair,"&start=",start.seconds,"&end=",end.seconds,"&period=86400")))
new.data <- ldply(new.data, data.frame)
new.data$date <- as.Date(as.POSIXct(new.data$date, origin = "1970-01-01"))
xts.data <- xts(new.data[,"close"], order.by=new.data$date)
names(xts.data) <- sub("BTC_","",pair)
return(xts.data)
}
# load data
global.crypto <- content(GET("https://api.coinmarketcap.com/v1/global/"))
countries <- c('CN', 'US', 'EU', 'JP', 'IN')
mc <- WDI(indicator = 'NY.GDP.MKTP.KD',
country = countries,
start = 2014, end = 2014)
countries.long <- mc$country
?install.packages
?corrplot
corrplot(cor(na.omit(merge(polo.returns, combined.price.history$USDBTC))), type="upper", order="hclust", tl.col="black")
corrplot(cor(na.omit(merge(polo.returns, combined.price.history$USDBTC))), type="lower", order="hclust", tl.col="black")
corrplot(cor(na.omit(merge(polo.returns, combined.price.history$USDBTC))), type="lower", order="hclust", tl.col="black", tl.srt=45)
corrplot(cor(na.omit(merge(polo.returns, 1/combined.price.history$USDBTC))), type="lower", order="hclust", tl.col="black", tl.srt=45)
```
corrplot(cor(na.omit(merge(polo.returns, 1/combined.price.history$USDBTC))), type="lower", order="hclust", tl.col="black", tl.srt=45)
corrplot(cor(na.omit(merge(polo.returns, -combined.price.history$USDBTC))), type="lower", order="hclust", tl.col="black", tl.srt=45)
?chart.Correlation
?silent
chart.Correlation(polo.returns, silent=TRUE)
?warnings
?CalculateReturns()
chart.Correlation(combined.price.history)
corrplot(cor(combined.price.history), type="lower", order="hclust", tl.col="black", tl.srt=45)
library(XML)
doc.html <- htmlTreeParse(paste0(getwd(), "ril_export.html"))
str(doc.html)
doc <- read.table(paste0(getwd(), "ril_export.html"))
doc <- read.table(paste0(getwd(), "/ril_export.html"))
doc.html <- htmlTreeParse(paste0(getwd(), "/ril_export.html"))
str(doc.html)
